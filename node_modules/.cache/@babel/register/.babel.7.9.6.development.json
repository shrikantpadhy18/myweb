{
  "{\"sourceRoot\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\",\"filename\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb",
      "filename": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar _alertNode = _interopRequireDefault(require(\"alert-node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar developerNameDefault = \"SHRIKANT PADHY\";\nvar developerCountryDefault = \"INDIA\";\n\nvar express = require('express');\n\nvar app = express();\n\nvar handlebars = require('express-handlebars').create({\n  defaultLayout: 'main'\n});\n\nvar nodemailer = require('nodemailer');\n\napp.engine('handlebars', handlebars.engine);\napp.set('view engine', 'handlebars');\napp.set('port', process.env.PORT || 3000);\napp.use(express[\"static\"](__dirname + '/assets'));\napp.get('/', function (req, res, next) {\n  res.render('home', {\n    layout: 'main',\n    developerName: developerNameDefault,\n    countryName: developerCountryDefault\n  });\n});\n\nvar mongoose = require(\"mongoose\");\n\nmongoose.Promise = global.Promise;\nmongoose.connect(\"mongodb://localhost:27017/mycustomer\", {\n  useUnifiedTopology: true,\n  useNewUrlParser: true\n});\nvar nameSchema = new mongoose.Schema({\n  Name: String,\n  Email: String,\n  Subject: String,\n  Message: String\n});\nvar User = mongoose.model(\"User\", nameSchema);\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.post(\"/addname\", function (req, res) {\n  var _req$body = req.body,\n      Name = _req$body.Name,\n      Email = _req$body.Email,\n      Subject = _req$body.Subject,\n      Message = _req$body.Message;\n  var transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'prashantpadhy21@gmail.com',\n      pass: '21052003'\n    }\n  });\n  var mailoptions = {\n    from: 'prashantpadhy21@gmail.com',\n    to: 'shrikantpadhy18@gmail.com',\n    subject: 'Name=' + JSON.stringify(Name) + JSON.stringify(Subject),\n    text: 'My Message=' + JSON.stringify(Message) + ' My Email=' + JSON.stringify(Email)\n  };\n  transporter.sendMail(mailoptions, function (error, info) {\n    if (error) {\n      (0, _alertNode[\"default\"])(\"Something Gone Wrong.\");\n    } else {\n      (0, _alertNode[\"default\"])(\"Email Sent.\");\n      console.log('Email sent: ' + info.response);\n    }\n  });\n});\napp.listen(process.env.PORT || 3000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRldmVsb3Blck5hbWVEZWZhdWx0IiwiZGV2ZWxvcGVyQ291bnRyeURlZmF1bHQiLCJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsImhhbmRsZWJhcnMiLCJjcmVhdGUiLCJkZWZhdWx0TGF5b3V0Iiwibm9kZW1haWxlciIsImVuZ2luZSIsInNldCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwidXNlIiwiX19kaXJuYW1lIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsImxheW91dCIsImRldmVsb3Blck5hbWUiLCJjb3VudHJ5TmFtZSIsIm1vbmdvb3NlIiwiUHJvbWlzZSIsImdsb2JhbCIsImNvbm5lY3QiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ1c2VOZXdVcmxQYXJzZXIiLCJuYW1lU2NoZW1hIiwiU2NoZW1hIiwiTmFtZSIsIlN0cmluZyIsIkVtYWlsIiwiU3ViamVjdCIsIk1lc3NhZ2UiLCJVc2VyIiwibW9kZWwiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInBvc3QiLCJib2R5IiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJzZXJ2aWNlIiwiYXV0aCIsInVzZXIiLCJwYXNzIiwibWFpbG9wdGlvbnMiLCJmcm9tIiwidG8iLCJzdWJqZWN0IiwiSlNPTiIsInN0cmluZ2lmeSIsInRleHQiLCJzZW5kTWFpbCIsImVycm9yIiwiaW5mbyIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxvQkFBb0IsR0FBQyxnQkFBekI7QUFDQSxJQUFJQyx1QkFBdUIsR0FBQyxPQUE1Qjs7QUFDQSxJQUFJQyxPQUFPLEdBQUNDLE9BQU8sQ0FBQyxTQUFELENBQW5COztBQUNBLElBQUlDLEdBQUcsR0FBQ0YsT0FBTyxFQUFmOztBQUNBLElBQUlHLFVBQVUsR0FBQ0YsT0FBTyxDQUFD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QUMsZ0JBQWNGLElBQUksQ0FBQ0MsU0FBTCxDQUFlcEIsT0FBZixDQUFkLEdBQXNDLFlBQXRDLEdBQW1EbUIsSUFBSSxDQUFDQyxTQUFMLENBQWV0QixLQUFmO0FBSjFDLEdBQWhCO0FBU0FXLEVBQUFBLFdBQVcsQ0FBQ2EsUUFBWixDQUFxQlAsV0FBckIsRUFBa0MsVUFBU1EsS0FBVCxFQUFnQkMsSUFBaEIsRUFBcUI7QUFDckQsUUFBSUQsS0FBSixFQUFXO0FBQ1QsaUNBQU0sdUJBQU47QUFDRCxLQUZELE1BRU87QUFDTCxpQ0FBTSxhQUFOO0FBQ0FFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFpQkYsSUFBSSxDQUFDRyxRQUFsQztBQUNEO0FBQ0YsR0FQRDtBQVNDLENBM0JIO0FBOEJBM0QsR0FBRyxDQUFDNEQsTUFBSixDQUFXckQsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBL0IiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzaHJpa2FudCBwYWRoeVxcRGVza3RvcFxcUFJBU09OXFxteXdlYlxcIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQgYWxlcnQgZnJvbSAnYWxlcnQtbm9kZSdcclxuXHJcbnZhciBkZXZlbG9wZXJOYW1lRGVmYXVsdD1cIlNIUklLQU5UIFBBREhZXCI7XHJcbnZhciBkZXZlbG9wZXJDb3VudHJ5RGVmYXVsdD1cIklORElBXCI7XHJcbnZhciBleHByZXNzPXJlcXVpcmUoJ2V4cHJlc3MnKTtcclxudmFyIGFwcD1leHByZXNzKCk7XHJcbnZhciBoYW5kbGViYXJzPXJlcXVpcmUoJ2V4cHJlc3MtaGFuZGxlYmFycycpLmNyZWF0ZSh7ZGVmYXVsdExheW91dDonbWFpbid9KTtcclxudmFyIG5vZGVtYWlsZXI9cmVxdWlyZSgnbm9kZW1haWxlcicpO1xyXG5cclxuXHJcbmFwcC5lbmdpbmUoJ2hhbmRsZWJhcnMnLGhhbmRsZWJhcnMuZW5naW5lKTtcclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCdoYW5kbGViYXJzJyk7XHJcbmFwcC5zZXQoJ3BvcnQnLHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy9hc3NldHMnKSk7XHJcbmFwcC5nZXQoJy8nLGZ1bmN0aW9uKHJlcSxyZXMsbmV4dClcclxue1xyXG4gICAgcmVzLnJlbmRlcihcclxuICAgICAgICAnaG9tZScse1xyXG4gICAgICAgICAgICBsYXlvdXQ6J21haW4nLFxyXG4gICAgICAgICAgICBkZXZlbG9wZXJOYW1lOmRldmVsb3Blck5hbWVEZWZhdWx0LFxyXG4gICAgICAgICAgICBjb3VudHJ5TmFtZTpkZXZlbG9wZXJDb3VudHJ5RGVmYXVsdFxyXG4gICAgICAgIH1cclxuICAgICk7XHJcbn1cclxuKTtcclxuXHJcblxyXG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XHJcbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcclxubW9uZ29vc2UuY29ubmVjdChcIm1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvbXljdXN0b21lclwiLHsgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlICwgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0pO1xyXG5cclxudmFyIG5hbWVTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuICBOYW1lOiBTdHJpbmcsXHJcbiAgICBFbWFpbDogU3RyaW5nLFxyXG4gICAgU3ViamVjdDpTdHJpbmcsXHJcbiAgICBNZXNzYWdlOlN0cmluZ1xyXG4gICAgXHJcbn0pO1xyXG52YXIgVXNlciA9IG1vbmdvb3NlLm1vZGVsKFwiVXNlclwiLCBuYW1lU2NoZW1hKTtcclxuXHJcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5cclxuYXBwLnBvc3QoXCIvYWRkbmFtZVwiLCAocmVxLCByZXMpID0+IHtcclxuICB2YXJ7TmFtZSxFbWFpbCxTdWJqZWN0LE1lc3NhZ2V9PXJlcS5ib2R5O1xyXG4gIHZhciB0cmFuc3BvcnRlcj1ub2RlbWFpbGVyLmNyZWF0ZVRyYW5zcG9ydCh7XHJcbiAgICBzZXJ2aWNlOidnbWFpbCcsXHJcbiAgICBhdXRoOntcclxuICAgICAgdXNlcjoncHJhc2hhbnRwYWRoeTIxQGdtYWlsLmNvbScsXHJcbiAgICAgIHBhc3M6JzIxMDUyMDAzJ1xyXG4gICAgfVxyXG4gIH0pXHJcbiAgdmFyIG1haWxvcHRpb25zPXtcclxuICAgIGZyb206J3ByYXNoYW50cGFkaHkyMUBnbWFpbC5jb20nLFxyXG4gICAgdG86J3NocmlrYW50cGFkaHkxOEBnbWFpbC5jb20nLFxyXG4gICAgc3ViamVjdDonTmFtZT0nK0pTT04uc3RyaW5naWZ5KE5hbWUpK0pTT04uc3RyaW5naWZ5KFN1YmplY3QpLFxyXG4gICAgdGV4dDonTXkgTWVzc2FnZT0nK0pTT04uc3RyaW5naWZ5KE1lc3NhZ2UpKycgTXkgRW1haWw9JytKU09OLnN0cmluZ2lmeShFbWFpbClcclxuXHJcbiAgfTtcclxuICBcclxuICBcclxuICB0cmFuc3BvcnRlci5zZW5kTWFpbChtYWlsb3B0aW9ucywgZnVuY3Rpb24oZXJyb3IsIGluZm8pe1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIGFsZXJ0KFwiU29tZXRoaW5nIEdvbmUgV3JvbmcuXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYWxlcnQoXCJFbWFpbCBTZW50LlwiKTtcclxuICAgICAgY29uc29sZS5sb2coJ0VtYWlsIHNlbnQ6ICcgKyBpbmZvLnJlc3BvbnNlKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgfSk7XHJcblxyXG5cclxuYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "developerNameDefault",
        "developerCountryDefault",
        "express",
        "require",
        "app",
        "handlebars",
        "create",
        "defaultLayout",
        "nodemailer",
        "engine",
        "set",
        "process",
        "env",
        "PORT",
        "use",
        "__dirname",
        "get",
        "req",
        "res",
        "next",
        "render",
        "layout",
        "developerName",
        "countryName",
        "mongoose",
        "Promise",
        "global",
        "connect",
        "useUnifiedTopology",
        "useNewUrlParser",
        "nameSchema",
        "Schema",
        "Name",
        "String",
        "Email",
        "Subject",
        "Message",
        "User",
        "model",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "post",
        "body",
        "transporter",
        "createTransport",
        "service",
        "auth",
        "user",
        "pass",
        "mailoptions",
        "from",
        "to",
        "subject",
        "JSON",
        "stringify",
        "text",
        "sendMail",
        "error",
        "info",
        "console",
        "log",
        "response",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\",
      "sourcesContent": [
        "'use strict';\r\nimport alert from 'alert-node'\r\n\r\nvar developerNameDefault=\"SHRIKANT PADHY\";\r\nvar developerCountryDefault=\"INDIA\";\r\nvar express=require('express');\r\nvar app=express();\r\nvar handlebars=require('express-handlebars').create({defaultLayout:'main'});\r\nvar nodemailer=require('nodemailer');\r\n\r\n\r\napp.engine('handlebars',handlebars.engine);\r\napp.set('view engine','handlebars');\r\napp.set('port',process.env.PORT || 3000);\r\napp.use(express.static(__dirname + '/assets'));\r\napp.get('/',function(req,res,next)\r\n{\r\n    res.render(\r\n        'home',{\r\n            layout:'main',\r\n            developerName:developerNameDefault,\r\n            countryName:developerCountryDefault\r\n        }\r\n    );\r\n}\r\n);\r\n\r\n\r\nvar mongoose = require(\"mongoose\");\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(\"mongodb://localhost:27017/mycustomer\",{ useUnifiedTopology: true , useNewUrlParser: true });\r\n\r\nvar nameSchema = new mongoose.Schema({\r\n  Name: String,\r\n    Email: String,\r\n    Subject:String,\r\n    Message:String\r\n    \r\n});\r\nvar User = mongoose.model(\"User\", nameSchema);\r\n\r\nvar bodyParser = require('body-parser');\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\napp.post(\"/addname\", (req, res) => {\r\n  var{Name,Email,Subject,Message}=req.body;\r\n  var transporter=nodemailer.createTransport({\r\n    service:'gmail',\r\n    auth:{\r\n      user:'prashantpadhy21@gmail.com',\r\n      pass:'21052003'\r\n    }\r\n  })\r\n  var mailoptions={\r\n    from:'prashantpadhy21@gmail.com',\r\n    to:'shrikantpadhy18@gmail.com',\r\n    subject:'Name='+JSON.stringify(Name)+JSON.stringify(Subject),\r\n    text:'My Message='+JSON.stringify(Message)+' My Email='+JSON.stringify(Email)\r\n\r\n  };\r\n  \r\n  \r\n  transporter.sendMail(mailoptions, function(error, info){\r\n    if (error) {\r\n      alert(\"Something Gone Wrong.\");\r\n    } else {\r\n      alert(\"Email Sent.\");\r\n      console.log('Email sent: ' + info.response);\r\n    }\r\n  });\r\n\r\n  });\r\n\r\n\r\napp.listen(process.env.PORT || 3000);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588917254450
  }
}