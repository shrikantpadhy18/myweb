{
  "{\"sourceRoot\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\",\"filename\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\shrikant padhy\\\\Desktop\\\\PRASON\\\\myweb\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb",
      "filename": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar jsalert = require('js-alerts');\n\nvar developerNameDefault = \"SHRIKANT PADHY\";\nvar developerCountryDefault = \"INDIA\";\n\nvar express = require('express');\n\nvar app = express();\n\nvar handlebars = require('express-handlebars').create({\n  defaultLayout: 'main'\n});\n\nvar nodemailer = require('nodemailer');\n\napp.engine('handlebars', handlebars.engine);\napp.set('view engine', 'handlebars');\napp.set('port', process.env.PORT || 3000);\napp.use(express[\"static\"](__dirname + '/assets'));\napp.get('/', function (req, res, next) {\n  res.render('home', {\n    layout: 'main',\n    developerName: developerNameDefault,\n    countryName: developerCountryDefault\n  });\n});\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.post(\"/addname\", function (req, res) {\n  var _req$body = req.body,\n      Name = _req$body.Name,\n      Email = _req$body.Email,\n      Subject = _req$body.Subject,\n      Message = _req$body.Message;\n  var transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'prashantpadhy21@gmail.com',\n      pass: '21052003'\n    }\n  });\n  var mailoptions = {\n    from: 'prashantpadhy21@gmail.com',\n    to: 'shrikantpadhy18@gmail.com',\n    subject: 'Name=' + JSON.stringify(Name) + JSON.stringify(Subject),\n    text: 'My Message=' + JSON.stringify(Message) + ' My Email=' + JSON.stringify(Email)\n  };\n  transporter.sendMail(mailoptions, function (error, info) {\n    if (error) {\n      jsalert.alert(\"Something Gone Wrong.\");\n    } else {\n      jsalert.alert(\"Email Sent.\");\n      console.log('Email sent: ' + info.response);\n    }\n  });\n});\napp.listen(process.env.PORT || 3000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImpzYWxlcnQiLCJyZXF1aXJlIiwiZGV2ZWxvcGVyTmFtZURlZmF1bHQiLCJkZXZlbG9wZXJDb3VudHJ5RGVmYXVsdCIsImV4cHJlc3MiLCJhcHAiLCJoYW5kbGViYXJzIiwiY3JlYXRlIiwiZGVmYXVsdExheW91dCIsIm5vZGVtYWlsZXIiLCJlbmdpbmUiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsIl9fZGlybmFtZSIsImdldCIsInJlcSIsInJlcyIsIm5leHQiLCJyZW5kZXIiLCJsYXlvdXQiLCJkZXZlbG9wZXJOYW1lIiwiY291bnRyeU5hbWUiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInBvc3QiLCJib2R5IiwiTmFtZSIsIkVtYWlsIiwiU3ViamVjdCIsIk1lc3NhZ2UiLCJ0cmFuc3BvcnRlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJhdXRoIiwidXNlciIsInBhc3MiLCJtYWlsb3B0aW9ucyIsImZyb20iLCJ0byIsInN1YmplY3QiLCJKU09OIiwic3RyaW5naWZ5IiwidGV4dCIsInNlbmRNYWlsIiwiZXJyb3IiLCJpbmZvIiwiYWxlcnQiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLE9BQU8sR0FBQ0MsT0FBTyxDQUFDLFdBQUQsQ0FBbkI7O0FBQ0EsSUFBSUMsb0JBQW9CLEdBQUMsZ0JBQXpCO0FBQ0EsSUFBSUMsdUJBQXVCLEdBQUMsT0FBNUI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFDSCxPQUFPLENBQUMsU0FBRCxDQUFuQjs7QUFDQSxJQUFJSSxHQUFHLEdBQUNELE9BQU8sRUFBZjs7QUFDQSxJQUFJRSxVQUFVLEdBQUNMLE9BQU8sQ0FBQyxvQkFBRCxDQUFQLENBQThCTSxNQUE5QixDQUFxQztBQUFDQyxFQUFBQSxhQUFhLEVBQUM7QUFBZixDQUFyQyxDQUFmOztBQUNBLElBQUlDLFVBQVUsR0FBQ1IsT0FBTyxDQUFDLFlBQUQsQ0FBdEI7O0FBR0FJLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLFlBQVgsRUFBd0JKLFVBQVUsQ0FBQ0ksTUFBbkM7QUFDQUwsR0FBRyxDQUFDTSxHQUFKLENBQVEsYUFBUixFQUFzQixZQUF0QjtBQUNBTixHQUFHLENBQUNNLEdBQUosQ0FBUSxNQUFSLEVBQWVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQW5DO0FBQ0FULEdBQUcsQ0FBQ1UsR0FBSixDQUFRWCxPQUFPLFVBQVAsQ0FBZVksU0FBUyxHQUFHLFNBQTNCLENBQVI7QUFDQVgsR0FBRyxDQUFDWSxHQUFKLENBQVEsR0FBUixFQUFZLFVBQVNDLEdBQVQsRUFBYUMsR0FBYixFQUFpQkMsSUFBakIsRUFDWjtBQUNJRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FDSSxNQURKLEVBQ1c7QUFDSEMsSUFBQUEsTUFBTSxFQUFDLE1BREo7QUFFSEMsSUFBQUEsYUFBYSxFQUFDckIsb0JBRlg7QUFHSHNCLElBQUFBLFdBQVcsRUFBQ3JCO0FBSFQsR0FEWDtBQU9ILENBVEQ7O0FBZUEsSUFBSXNCLFVBQVUsR0FBR3hCLE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUNBSSxHQUFHLENBQUNVLEdBQUosQ0FBUVUsVUFBVSxDQUFDQyxJQUFYLEVBQVI7QUFDQXJCLEdBQUcsQ0FBQ1UsR0FBSixDQUFRVSxVQUFVLENBQUNFLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUVBdkIsR0FBRyxDQUFDd0IsSUFBSixDQUFTLFVBQVQsRUFBcUIsVUFBQ1gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxrQkFDREQsR0FBRyxDQUFDWSxJQURIO0FBQUEsTUFDN0JDLElBRDZCLGFBQzdCQSxJQUQ2QjtBQUFBLE1BQ3hCQyxLQUR3QixhQUN4QkEsS0FEd0I7QUFBQSxNQUNsQkMsT0FEa0IsYUFDbEJBLE9BRGtCO0FBQUEsTUFDVkMsT0FEVSxhQUNWQSxPQURVO0FBRWpDLE1BQUlDLFdBQVcsR0FBRTFCLFVBQVUsQ0FBQzJCLGVBQVgsQ0FBMkI7QUFDMUNDLElBQUFBLE9BQU8sRUFBRSxPQURpQztBQUUxQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRSwyQkFERjtBQUVKQyxNQUFBQSxJQUFJLEVBQUU7QUFGRjtBQUZvQyxHQUEzQixDQUFqQjtBQU9BLE1BQUlDLFdBQVcsR0FBQztBQUNkQyxJQUFBQSxJQUFJLEVBQUMsMkJBRFM7QUFFZEMsSUFBQUEsRUFBRSxFQUFDLDJCQUZXO0FBR2RDLElBQUFBLE9BQU8sRUFBQyxVQUFRQyxJQUFJLENBQUNDLFNBQUwsQ0FBZWYsSUFBZixDQUFSLEdBQTZCYyxJQUFJLENBQUNDLFNBQUwsQ0FBZWIsT0FBZixDQUh2QjtBQUlkYyxJQUFBQSxJQUFJLEVBQUMsZ0JBQWNGLElBQUksQ0FBQ0MsU0FBTCxDQUFlWixPQUFmLENBQWQsR0FBc0MsWUFBdEMsR0FBbURXLElBQUksQ0FBQ0MsU0FBTCxDQUFlZCxLQUFmO0FBSjFDLEdBQWhCO0FBU0FHLEVBQUFBLFdBQVcsQ0FBQ2EsUUFBWixDQUFxQlAsV0FBckIsRUFBa0MsVUFBU1EsS0FBVCxFQUFnQkMsSUFBaEIsRUFBcUI7QUFDckQsUUFBSUQsS0FBSixFQUFXO0FBQ1RqRCxNQUFBQSxPQUFPLENBQUNtRCxLQUFSLENBQWMsdUJBQWQ7QUFDRCxLQUZELE1BRU87QUFDTG5ELE1BQUFBLE9BQU8sQ0FBQ21ELEtBQVIsQ0FBYyxhQUFkO0FBQ0FDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFpQkgsSUFBSSxDQUFDSSxRQUFsQztBQUNEO0FBQ0YsR0FQRDtBQVNDLENBM0JIO0FBOEJBakQsR0FBRyxDQUFDa0QsTUFBSixDQUFXM0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBL0IiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzaHJpa2FudCBwYWRoeVxcRGVza3RvcFxcUFJBU09OXFxteXdlYlxcIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIGpzYWxlcnQ9cmVxdWlyZSgnanMtYWxlcnRzJyk7XHJcbnZhciBkZXZlbG9wZXJOYW1lRGVmYXVsdD1cIlNIUklLQU5UIFBBREhZXCI7XHJcbnZhciBkZXZlbG9wZXJDb3VudHJ5RGVmYXVsdD1cIklORElBXCI7XHJcbnZhciBleHByZXNzPXJlcXVpcmUoJ2V4cHJlc3MnKTtcclxudmFyIGFwcD1leHByZXNzKCk7XHJcbnZhciBoYW5kbGViYXJzPXJlcXVpcmUoJ2V4cHJlc3MtaGFuZGxlYmFycycpLmNyZWF0ZSh7ZGVmYXVsdExheW91dDonbWFpbid9KTtcclxudmFyIG5vZGVtYWlsZXI9cmVxdWlyZSgnbm9kZW1haWxlcicpO1xyXG5cclxuXHJcbmFwcC5lbmdpbmUoJ2hhbmRsZWJhcnMnLGhhbmRsZWJhcnMuZW5naW5lKTtcclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCdoYW5kbGViYXJzJyk7XHJcbmFwcC5zZXQoJ3BvcnQnLHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy9hc3NldHMnKSk7XHJcbmFwcC5nZXQoJy8nLGZ1bmN0aW9uKHJlcSxyZXMsbmV4dClcclxue1xyXG4gICAgcmVzLnJlbmRlcihcclxuICAgICAgICAnaG9tZScse1xyXG4gICAgICAgICAgICBsYXlvdXQ6J21haW4nLFxyXG4gICAgICAgICAgICBkZXZlbG9wZXJOYW1lOmRldmVsb3Blck5hbWVEZWZhdWx0LFxyXG4gICAgICAgICAgICBjb3VudHJ5TmFtZTpkZXZlbG9wZXJDb3VudHJ5RGVmYXVsdFxyXG4gICAgICAgIH1cclxuICAgICk7XHJcbn1cclxuKTtcclxuXHJcblxyXG5cclxuXHJcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5cclxuYXBwLnBvc3QoXCIvYWRkbmFtZVwiLCAocmVxLCByZXMpID0+IHtcclxuICB2YXJ7TmFtZSxFbWFpbCxTdWJqZWN0LE1lc3NhZ2V9PXJlcS5ib2R5O1xyXG4gIHZhciB0cmFuc3BvcnRlcj0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xyXG4gICAgc2VydmljZTogJ2dtYWlsJyxcclxuICAgIGF1dGg6IHtcclxuICAgICAgdXNlcjogJ3ByYXNoYW50cGFkaHkyMUBnbWFpbC5jb20nLFxyXG4gICAgICBwYXNzOiAnMjEwNTIwMDMnXHJcbiAgICB9XHJcbiAgfSlcclxuICB2YXIgbWFpbG9wdGlvbnM9e1xyXG4gICAgZnJvbToncHJhc2hhbnRwYWRoeTIxQGdtYWlsLmNvbScsXHJcbiAgICB0bzonc2hyaWthbnRwYWRoeTE4QGdtYWlsLmNvbScsXHJcbiAgICBzdWJqZWN0OidOYW1lPScrSlNPTi5zdHJpbmdpZnkoTmFtZSkrSlNPTi5zdHJpbmdpZnkoU3ViamVjdCksXHJcbiAgICB0ZXh0OidNeSBNZXNzYWdlPScrSlNPTi5zdHJpbmdpZnkoTWVzc2FnZSkrJyBNeSBFbWFpbD0nK0pTT04uc3RyaW5naWZ5KEVtYWlsKVxyXG5cclxuICB9O1xyXG4gIFxyXG4gIFxyXG4gIHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxvcHRpb25zLCBmdW5jdGlvbihlcnJvciwgaW5mbyl7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAganNhbGVydC5hbGVydChcIlNvbWV0aGluZyBHb25lIFdyb25nLlwiKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGpzYWxlcnQuYWxlcnQoXCJFbWFpbCBTZW50LlwiKTtcclxuICAgICAgY29uc29sZS5sb2coJ0VtYWlsIHNlbnQ6ICcgKyBpbmZvLnJlc3BvbnNlKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgfSk7XHJcblxyXG5cclxuYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "jsalert",
        "require",
        "developerNameDefault",
        "developerCountryDefault",
        "express",
        "app",
        "handlebars",
        "create",
        "defaultLayout",
        "nodemailer",
        "engine",
        "set",
        "process",
        "env",
        "PORT",
        "use",
        "__dirname",
        "get",
        "req",
        "res",
        "next",
        "render",
        "layout",
        "developerName",
        "countryName",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "post",
        "body",
        "Name",
        "Email",
        "Subject",
        "Message",
        "transporter",
        "createTransport",
        "service",
        "auth",
        "user",
        "pass",
        "mailoptions",
        "from",
        "to",
        "subject",
        "JSON",
        "stringify",
        "text",
        "sendMail",
        "error",
        "info",
        "alert",
        "console",
        "log",
        "response",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\shrikant padhy\\Desktop\\PRASON\\myweb\\",
      "sourcesContent": [
        "'use strict';\r\n\r\nvar jsalert=require('js-alerts');\r\nvar developerNameDefault=\"SHRIKANT PADHY\";\r\nvar developerCountryDefault=\"INDIA\";\r\nvar express=require('express');\r\nvar app=express();\r\nvar handlebars=require('express-handlebars').create({defaultLayout:'main'});\r\nvar nodemailer=require('nodemailer');\r\n\r\n\r\napp.engine('handlebars',handlebars.engine);\r\napp.set('view engine','handlebars');\r\napp.set('port',process.env.PORT || 3000);\r\napp.use(express.static(__dirname + '/assets'));\r\napp.get('/',function(req,res,next)\r\n{\r\n    res.render(\r\n        'home',{\r\n            layout:'main',\r\n            developerName:developerNameDefault,\r\n            countryName:developerCountryDefault\r\n        }\r\n    );\r\n}\r\n);\r\n\r\n\r\n\r\n\r\nvar bodyParser = require('body-parser');\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\napp.post(\"/addname\", (req, res) => {\r\n  var{Name,Email,Subject,Message}=req.body;\r\n  var transporter= nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n      user: 'prashantpadhy21@gmail.com',\r\n      pass: '21052003'\r\n    }\r\n  })\r\n  var mailoptions={\r\n    from:'prashantpadhy21@gmail.com',\r\n    to:'shrikantpadhy18@gmail.com',\r\n    subject:'Name='+JSON.stringify(Name)+JSON.stringify(Subject),\r\n    text:'My Message='+JSON.stringify(Message)+' My Email='+JSON.stringify(Email)\r\n\r\n  };\r\n  \r\n  \r\n  transporter.sendMail(mailoptions, function(error, info){\r\n    if (error) {\r\n      jsalert.alert(\"Something Gone Wrong.\");\r\n    } else {\r\n      jsalert.alert(\"Email Sent.\");\r\n      console.log('Email sent: ' + info.response);\r\n    }\r\n  });\r\n\r\n  });\r\n\r\n\r\napp.listen(process.env.PORT || 3000);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588997027808
  }
}